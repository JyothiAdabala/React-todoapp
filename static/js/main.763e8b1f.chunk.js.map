{"version":3,"sources":["logo.svg","ListItem.js","App.js","reportWebVitals.js","index.js"],"names":["ListItem","props","listItems","items","map","item","className","type","id","key","value","text","onChange","e","setUpdate","target","icon","onClick","deleteItem","library","add","faTrash","App","state","currentItem","handleInput","bind","addItem","this","setState","Date","now","preventDefault","newItem","newItems","filteredItems","filter","onSubmit","placeholder","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qQAAe,I,0BC+BAA,MA3Bf,SAAkBC,GACd,IACMC,EADQD,EAAME,MACIC,KAAI,SAAAC,GAEpB,OAAO,qBAAKC,UAAU,OAAf,SACH,8BACI,uBAAOC,KAAK,OACZC,GAAMH,EAAKI,IACXC,MAAOL,EAAKM,KACZC,SACI,SAACC,GACGZ,EAAMa,UAAUD,EAAEE,OAAOL,MAAML,EAAKI,QAI5C,+BACI,cAAC,IAAD,CAAiBH,UAAU,UAAUU,KAAO,QAC5CC,QAAY,kBAAMhB,EAAMiB,WAAWb,EAAKI,cAblBJ,EAAKI,QAkB/C,OACI,8BAAMP,K,eCpBdiB,IAAQC,IAAIC,K,IAiFGC,E,kDA7Eb,WAAYrB,GAAQ,IAAD,8BACjB,cAAMA,IAEDsB,MAAQ,CACVpB,MAAQ,GACRqB,YAAc,CACZb,KAAO,GACPF,IAAM,KAGX,EAAKgB,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,QAAU,EAAKA,QAAQD,KAAb,gBACf,EAAKR,WAAa,EAAKA,WAAWQ,KAAhB,gBAClB,EAAKZ,UAAY,EAAKA,UAAUY,KAAf,gBAbA,E,+CAenB,SAAYb,GACVe,KAAKC,SAAS,CACZL,YAAc,CACZb,KAAOE,EAAEE,OAAOL,MAChBD,IAAMqB,KAAKC,W,qBAKjB,SAAQlB,GACNA,EAAEmB,iBACF,IAAMC,EAAUL,KAAKL,MAAMC,YAC3B,GAAiB,IAAdS,EAAQtB,KAAS,CAClB,IAAMuB,EAAQ,sBAAON,KAAKL,MAAMpB,OAAlB,CAAwB8B,IACtCL,KAAKC,SAAS,CACZ1B,MAAQ+B,EACRV,YAAc,CACZb,KAAO,GACPF,IAAM,S,wBAMd,SAAWA,GACT,IAAM0B,EAAgBP,KAAKL,MAAMpB,MAAMiC,QAAO,SAAA/B,GAAI,OAChDA,EAAKI,KAAKA,KACVmB,KAAKC,SAAS,CACZ1B,MAAMgC,M,uBAIZ,SAAUxB,EAAKF,GACb,IAAMN,EAAQyB,KAAKL,MAAMpB,MACzBA,EAAMC,KAAI,SAAAC,GACLA,EAAKI,MAAQA,IACdJ,EAAKM,KAAOA,MAGhBiB,KAAKC,SAAS,CACZ1B,MAAQA,M,oBAIZ,WACE,OACE,sBAAKG,UAAU,MAAf,UACM,iCACA,uBAAME,GAAG,OAAO6B,SAAUT,KAAKD,QAA/B,UACE,uBAAOpB,KAAK,OAAO+B,YAAY,aAC/B5B,MAASkB,KAAKL,MAAMC,YAAYb,KAChCC,SAAYgB,KAAKH,cACjB,wBAAQlB,KAAK,SAAb,sBAGN,cAAC,EAAD,CAAUJ,MAASyB,KAAKL,MAAMpB,MAC9Be,WAAcU,KAAKV,WACnBJ,UAAac,KAAKd,mB,GA1ERyB,IAAMC,WCGTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.763e8b1f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport './ListItem.css'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nfunction ListItem(props){\r\n    const items = props.items;\r\n    const listItems = items.map(item => \r\n        {\r\n            return <div className=\"list\" key={item.key}>\r\n                <p>\r\n                    <input type=\"text\" \r\n                    id = {item.key} \r\n                    value={item.text} \r\n                    onChange = {\r\n                        (e) =>{\r\n                            props.setUpdate(e.target.value,item.key)\r\n                        }\r\n                    }\r\n                    />\r\n                    <span>\r\n                        <FontAwesomeIcon className=\"faicons\" icon = 'trash' \r\n                        onClick = { () => props.deleteItem(item.key)}/>\r\n                    </span>\r\n                </p>\r\n            </div>\r\n        })\r\n    return(\r\n        <div>{listItems}</div>\r\n    )\r\n}\r\n\r\nexport default ListItem;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport ListItem from './ListItem'\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(faTrash);\n\nclass App extends React.Component{\n\n  constructor(props) {\n    super(props)\n  \n    this.state = {\n       items : [],\n       currentItem : {\n         text : '',\n         key : ''\n       }\n    }\n    this.handleInput = this.handleInput.bind(this);\n    this.addItem = this.addItem.bind(this);\n    this.deleteItem = this.deleteItem.bind(this);\n    this.setUpdate = this.setUpdate.bind(this);\n  }\n  handleInput(e){\n    this.setState({\n      currentItem : {\n        text : e.target.value,\n        key : Date.now()\n      }\n    })\n  }\n  \n  addItem(e){\n    e.preventDefault();\n    const newItem = this.state.currentItem;\n    if(newItem.text!=\"\"){\n      const newItems = [...this.state.items,newItem];\n      this.setState({\n        items : newItems,\n        currentItem : {\n          text : '',\n          key : ''\n        }\n      })\n    }\n  }\n\n  deleteItem(key){\n    const filteredItems = this.state.items.filter(item => \n      item.key!=key);\n      this.setState({\n        items:filteredItems\n      })\n  }\n\n  setUpdate(text,key){\n    const items = this.state.items;\n    items.map(item => {\n      if(item.key === key){\n        item.text = text;\n      }\n    })\n    this.setState({\n      items : items\n    })\n  }\n\n  render(){\n    return(\n      <div className=\"App\">\n            <header>\n            <form id=\"todo\" onSubmit={this.addItem}>\n              <input type=\"text\" placeholder=\"Enter text\" \n              value = {this.state.currentItem.text}\n              onChange = {this.handleInput}></input>\n              <button type=\"submit\">Add</button>\n            </form>\n        </header>\n        <ListItem items = {this.state.items}\n        deleteItem = {this.deleteItem}\n        setUpdate = {this.setUpdate}></ListItem>\n      </div>\n    )\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}